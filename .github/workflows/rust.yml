name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Build binaries
        run: cargo build --release

      - name: Rename binary
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            mv target/release/boxes target/release/boxes.dmg
          elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            mv target/release/boxes target/release/boxes.deb
          fi

      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: binary-${{ matrix.os }}
          path: target/release/boxes*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download all artifacts
        uses: actions/download-artifact@v2

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: Release coolio
          tag_name: boxes-0.1.0
          draft: true

      - name: Upload all artifacts to release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            download/binary-macos-latest/*
            download/binary-windows-latest/*
            download/binary-ubuntu-latest/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}